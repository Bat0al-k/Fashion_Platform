import{A as g,a as u,ab as p,b as m,cb as I,h as l,o as a,q as h,s as o,u as c,x as d}from"./chunk-CONT6OMZ.js";var f="http://localhost:3000/api/cart",S=!1,E=(()=>{class n{constructor(t){this.http=t,this.apiUrl=f,this.testMode=S,this.cartItemsSubject=new l([]),this.cartItems$=this.cartItemsSubject.asObservable(),this.loadCartFromLocalStorage()}getHeaders(){let t=localStorage.getItem("token");return new p(u({"Content-Type":"application/json",Accept:"application/json"},t&&{Authorization:`Bearer ${t}`}))}loadCartFromLocalStorage(){let t=localStorage.getItem("cart");if(t)try{let e=JSON.parse(t);this.cartItemsSubject.next(e)}catch(e){console.error("Error loading cart from localStorage:",e),this.cartItemsSubject.next([])}}saveCartToLocalStorage(t){localStorage.setItem("cart",JSON.stringify(t))}getCart(){return this.testMode?a({items:this.cartItemsSubject.value}):this.http.get(this.apiUrl,{headers:this.getHeaders()}).pipe(h(t=>t&&Array.isArray(t.items)?(this.cartItemsSubject.next(t.items),t):{items:this.cartItemsSubject.value}),o(t=>{console.error("Error fetching cart:",t);let e=this.cartItemsSubject.value;return a({items:e})}))}getCartItems(){return this.testMode?this.cartItems$:this.http.get(this.apiUrl,{headers:this.getHeaders()}).pipe(c(t=>{this.cartItemsSubject.next(t),this.saveCartToLocalStorage(t)}),o(t=>(console.error("Error fetching cart items:",t),this.cartItems$)))}addToCart(t){let e=this.cartItemsSubject.value,s=e.find(r=>r.id===t.id&&(r.color||"")===(t.color||"")&&(r.size||"")===(t.size||""));if(s)s.quantity+=t.quantity;else{let r=m(u({},t),{_id:t._id||t.id});e.push(r)}if(this.cartItemsSubject.next([...e]),this.saveCartToLocalStorage(e),this.testMode)return a({success:!0,message:"Item added to cart"});let i={productId:t.id,quantity:t.quantity};return this.http.post(this.apiUrl,i,{headers:this.getHeaders()}).pipe(c(r=>console.log("Response:",r)),o(r=>(console.error("Error adding item to cart:",r),r.status===401?a({success:!0,message:"Item added to local cart"}):a({success:!1,message:"Error adding item to cart"}))))}updateCartItem(t,e){let s=this.cartItemsSubject.value,i=s.find(r=>r._id===t||r.id===t);if(i){if(e<=0)return this.removeFromCart(t);i.quantity=e,this.cartItemsSubject.next([...s]),this.saveCartToLocalStorage(s)}return this.testMode?a({success:!0,message:"Quantity updated"}):this.http.put(this.apiUrl,{itemId:t,quantity:e},{headers:this.getHeaders()}).pipe(c(r=>console.log("Quantity updated:",r)),o(r=>(console.error("Error updating quantity:",r),a({success:!1,message:"Error updating quantity"}))))}updateQuantity(t,e){return this.updateCartItem(t,e)}removeFromCart(t){let s=this.cartItemsSubject.value.filter(i=>i._id!==t&&i.id!==t);return this.cartItemsSubject.next(s),this.saveCartToLocalStorage(s),this.testMode?a({success:!0,message:"Item removed from cart"}):this.http.delete(`${this.apiUrl}/${t}`,{headers:this.getHeaders()}).pipe(c(i=>console.log("Item removed from cart:",i)),o(i=>(console.error("Error removing item from cart:",i),a({success:!1,message:"Error removing item from cart"}))))}clearCart(){return this.cartItemsSubject.next([]),this.saveCartToLocalStorage([]),this.testMode?a({success:!0,message:"Cart cleared"}):this.http.delete(this.apiUrl,{headers:this.getHeaders()}).pipe(c(t=>console.log("Cart cleared:",t)),o(t=>(console.error("Error clearing cart:",t),a({success:!1,message:"Error clearing cart"}))))}getCartTotal(){return this.cartItemsSubject.value.reduce((e,s)=>e+s.price*s.quantity,0)}getCartItemCount(){return this.cartItemsSubject.value.reduce((e,s)=>e+s.quantity,0)}isInCart(t){return this.cartItemsSubject.value.some(s=>s.id===t)}static{this.\u0275fac=function(e){return new(e||n)(g(I))}}static{this.\u0275prov=d({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();export{E as a};
